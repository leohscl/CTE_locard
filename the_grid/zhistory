you : whoareyou ?
the program : Flynn and you ?
you : concepter
the program : what do you want ? 
you : the code to exit the grid 
the program : you won't go out
the program : good luck


the program : start program name THE GRID
sudo pacman -S
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd configls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus


ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
lsls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/clls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
e
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
lsls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS{TROLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd varls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
BONUS
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -rls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
suls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.comls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd configls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus


ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
lsls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/clls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
e
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
lsls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
BONUS{Trace_on}
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS{TROLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd varls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
BONUS
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -rls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
suls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
v
v

sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.comls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus

holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
sudo pacman -S discord
sudo pacman -Syyu
sudo pacman -Syu
sudo pacman -Su
sudo pacman -S discord
sudo pacman -S yay
pamac build spotify
mhwd-kernel -li
sudo pacman -Syu virtualbox linux65-virtualbox-host-modules
sudo vboxreload
reboot
sudo pacman -S snapd
sudo pacman -S docker
sudo snap install bitwarden
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install bitwarden
snap install bitwarden
sudo pacman -Syyu
sudo pacman -Syyu discord
sudo pacman -Syyu
sudo pacman -S discord
sudo snap refresh
sudo ./Discord/Discord
sudo pacman -S vscode
sudo ./Discord
sudo pacman -S discord
sudo ./discord-0.0.31.deb
sudo pacman ./discord-0.0.31.deb
ls
sudo dpkg -i discord-0.0.31.deb
sudo pacman -S dpkg
sudo dpkg -i discord-0.0.31.deb

sudo pacman -S libc6
sudo pacman -S libxtst6
sudo pacman -Syyu
sudo pacman -Syu git base-devel --needed
sudo pacman -Syyu
sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra 
shutdown
shutdown -c
sudo pacman -Syu git base-devel --needed
$ mhwd-kernel -li
sudo pacman -Syu $KERNELXYY-headers dkms
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux61\
   * linux63
$ mhwd-kernel -li\
Currently running: 6.3.8-1-MANJARO (linux65)\
The following kernels are installed in your system:\
   * linux65
git clone https://aur.archlinux.org/vmware-workstation.git
Cloning into 'vmware-workstation'...\
remote: Enumerating objects: 498, done.\
remote: Counting objects: 100% (498/498), done.\
remote: Compressing objects: 100% (239/239), done.\
remote: Total 498 (delta 307), reused 439 (delta 258), pack-reused 0\
Receiving objects: 100% (498/498), 256.62 KiB | 3.21 MiB/s, done.\
Resolving deltas: 100% (307/307), done.
ls ~/vmware-workstation
cd ~/vmware-workstation\
makepkg -is
cd
ls
cd ~/vmware-workstation\
makepkg -is
cd
cd vmware-workstation
ls
cd
rm vmware-workstation
sudo rm vmware-workstation
sudo rm-r vmware-workstation
rm-r vmware-workstation
rm -r vmware-workstation
ls
yay vmware-workstation
sudo pacman -Syu vlc
sudo pacman -Syyu
sudo pacman -Syu
sudo umount /dev/sdx1
fdisk
sudo mount /dev/sd1
sudo mount /dev/sd
sudo mount /dev/sdb1 /mnt/cle
sudo mount /dev/sdb1/mnt/cle
sudo mount /dev/sdb1
sudo mount /dev/sda1
lsblk -f
sudo pacman -Syu
sudo pacman -S audacity
sudo pacman -S filezilla
sudo pacman -S winscp
sudo pacman -S maltego
sudo pacman -S dcker
sudo pacman -S docker
sudo pacman -S docker-compose
git clone https://g
docker-compose up
ypipe install holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
BONUS
ls
cd
ls
holehe 
ls
cd
holehe test@gmail.com
holehe
holehe test@gmail.com
ls
cd holehe
ls
holehe test@gmail.com
cd
holehe test@gmail.com
ls
sudo holehe
git clone https://github.com/megadose/holehe.git\
cd holehe/\
python3 setup.py install
ls
funding
ls
holehe
ls
core.py
cd
ls
docker build -t osintgram .
docker build -t osintgram
docker run --rm -it -v "$PWD/output:/home/osintgram/output" osintgram <target>
sudo pacman -Syyu
docker-compose run osintgram <target>
git clone https://github.com/Datalux/Osintgram.git
ls
cd Osintgram
ls
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python3 main.py 
ls
cd venv
ls
cd ..
ls
cd config
ls
nano credentials.ini
sudo pacman -Syyu
docker run -p 8000:8000 -it ctfd/ctfd
sudo pacman -Syyu
./qFlipper.AppImage
sudo ./qFlipper.AppImage
git clone https://github.com/flipperdevices/qFlipper.git --recursive
./qFlipper-x86_64.AppImage rules install [/optional/path/to/rules/dir]
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker start webgoat
sudo pacman -S docker
docker
docker build webgoat
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
su
cd
cd 
ls
cd ..
cd //
cd ..
docker ps -l
cd var
cd run
ls
cd docker
nano ///var/run/docker.sock
nano ///var/run/docker.sock.
docker images
docker ps
systemctl start docker
systemctl enable docker
systemctl restart docker
docker -v
docker images
sudo docker images
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
cd
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo pacman -Syyu
sudo pacman -S
sudo pacman -Syu
sudo pacman smbclient
sudo pacman -S smbclient
sudo pacman -S openvpn
sudo pacman -S pip
docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat 
docker start webgoat
sudo docker start webgoat
sudo docker run webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker images
sudo docker images 
sudo docker start webgoat/webgoat
sudo docker start webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run --name webgoat -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
sudo docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
python
sudo pacman -S wireshark
ping https://revobitc.com/
sudo pacman -S brave-browser
\
\
sudo snap install opera\
\

sudo pacman -S snapd
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install opera
opera
/bin/python 
clear
/bin/python 
cd ~/Documents\
git clone 
chmod +x ctfcli-init.sh\
./ctfcli-init.sh
sudo pacman install gh\
gh auth login
sudo pacman -S install gh\
gh auth login
sudo pacman -S  gh\
gh auth login
sudo pacman -S gh\

sudo pacman -Syu zsh
sudo snap install gh
gh auth login
snap install obsidian_<version>_<arch>.snap --dangerous --classic
pacman obsidian
[200~sudo snap install obsidian --classic~
snap install obsidian --classic~
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install obsidian --classic
pacman -Syyu
sudo pacman -Syu
sudo pacman -Syyu
sudo
su
docker run -it php:zts-alpine3.18
docker run php:zts-alpine3.18
docker run zts-alpine3.18
sudo docker run zts-alpine3.18
sudo docker run php:zts-alpine3.18
ls
sudo docker run -it php:zts-alpine3.18
sudo docker run -it php:zts-alpine3.18 ash
docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine
sudo docker commit 5babb3bbdec4 alpine/alpine
ls
docker images
sudo docker images
docker images
sudo docker images
docker commit 5babb3bbdec4 alpine:alpine
sudo docker commit 5babb3bbdec4 alpine:alpine
docker images 
sudo docker images
snap install ksnip
pacman -S google-chrome
sudo pacman -S google-chrome
pamac install google-chrome
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac install google-chrome
clear
pamac install wireshark-qt
sudo pacman -Syyu 
vi data 
vi data
uudecode data 
>github
>github create pull
sudo pacman -Syyu 
sudo apt update
sudo pacman -Syyu 
sudo ip link set enp88s0 down
ip a
sudo systemctl enable vmware.service
systemctl start vmware-networks.service
sudo systemctl enable --now vmware-hostd.service
systemctl enable vmware-networks
systemctl enable vmware-usbarbitrator
IP A
ip a
ping 172.16.200.2
[200~sudo pacman -Syu~
sudo pacman -Syu
sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
pamac build github-desktop-bin
sudo pamac checkupdates -a
sudo pamac upgrade -a
cd ..
ls
cd ..
ls
sudo pacman -S visual-studio-code-bin
pacman -Rdd code code-marketplace
sudo pacman -Rdd code code-marketplace
sudo pacman -S code code-marketplace
sudo pacman -S code code-features
sudo pacman -Rdd code code-features
sudo pacman -R vscode
flatpak remove com.visualstudio.code
sudo pacman -R code
sudo pamac remove obsidian
sudo pacman -R obsidian
sudo pamac remove obsidian
sudo pamac -R bitwarden
sudo pamac -remove bitwarden
sudo pamac remove bitwarden
pamac remove bitwarden
sudo pacman -S --needed git base-devel
sudo  clone git https://aur.archlinux.org/yay-git.git
clone git https://aur.archlinux.org/yay-git.git
sudo pacman -Sy
sudo pacman -Syyur
sudo pacman -Syyu
snap remove obsidian
snap remove bitwarden
snap remove knisp
snap remove ksnip
sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/visual-studio-code-bin.git
cd visual-studio-code-bin
makepkg -si
yaourt -S tor-browser
yay -S tor-browser
sudo pacman -S tor
flatpak install flathub com.github.micahflee.torbrowser-launcher -y
sudo pacman -S 
sudo pacman -S
pacman -S
sudo pacman -S
sudo pacman -Syyu
kernel 
lsb_release -a
ls -l
pwd
whoami
ps aux
df -h
free -m
cat /etc/passwd
uname -a
sudo apt update
sudo apt install htop
ping google.com
traceroute example.com
nano readme.txt
grep keyword file.txt
chmod 755 script.sh
cp file1.txt file2.txt
mv oldfile.txt newfile.txt
rm unwanted_file.txt
mkdir new_directory
cd /path/to/directory
'Hello, World!' > output.txt
head -n 10 large_file.txt
tail -n 20 large_file.txt
date
cal
history
du -sh /path/to/directory
wget http://example.com/file.zip
tar -zxvf archive.tar.gz
find /path/to/search -name '*.txt'
ssh user@remote_server
scp file.txt user@remote_server:/path/to/destination
chmod +x executable_script.sh
./executable_script.sh
journalctl -xe
systemctl status service_name
ps aux | grep process_name
ip a
ifconfig
netstat -tulpn
lsof -i :port_number
top
htop
uname -r
lsblk
mount
fdisk -l
curl http://example.com/api
nc -vz target_host target_port
nmap -p 1-100 target_host
wget -O - http://example.com/page.html
$SHELL
useradd -m new_user
passwd new_user
groupadd new_group
usermod -aG new_group new_user
chown new_user:new_group file.txt
chmod 600 sensitive_file.txt
history -c
kill -9 process_id
uptime
watch -n 1 'ls -l'
mkfs.ext4 /dev/sdX
mount /dev/sdX /mnt
umount /mnt
journalctl --since '2023-01-01 00:00:00' --until '2023-01-31 23:59:59'
find / -name '*.log'
systemctl start service_name
systemctl stop service_name
systemctl restart service_name
systemctl enable service_name
systemctl disable service_name
crontab -l
df -i
killall process_name
grep -r 'pattern' /path/to/search
sed 's/old_string/new_string/g' file.txt
awk '{print $1}' file.txt
history | grep 'command'
du -h /path/to/directory
chmod a+x script.sh
chown -R user:group /path/to/directory
$PATH
ps -ef | grep 'process_name'
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip
tar -cvzf archive.tar.gz directory/
find / -type f -size +100M
cat /proc/cpuinfo
cat /proc/meminfo
ls -lh /var/log
journalctl --disk-usage
find / -type f -exec chmod 644 {} \;
find / -type d -exec chmod 755 {} \;
grep -iR 'search_string' /path/to/search
netstat -an
nmcli dev show
lsmod
dmesg
usermod -aG sudo new_user
'export PATH=$PATH:/new/directory' >> ~/.bashrc
systemctl status network.service
journalctl --disk-usage
find / -type f -name '*.conf'
scp local_file.txt user@remote_server:/path/to/destination
history -c && history -w
cat /etc/hosts
ip route show
nmcli connection show
mkdir -p /path/to/new/directory
grep -E 'pattern1'
ls -alh
uptime
journalctl -n 50
ls -R /
find / -type d -exec ls -l {} \;
find / -type f -exec file {} \;
du -h --max-depth=1 /
ps -ef
pstree
kill -l
lscpu
lsblk -a
cat /proc/mounts
cat /proc/version
cat /etc/issue
cat /etc/hostname
cat /etc/hosts
ls /etc/network/
ls /etc/sysconfig/network-scripts/
ip addr show
ip link show
iptables -L
ss -tulwn
lsmod
modinfo module_name
dmesg | tail
free -h
sar
vmstat
iostat
top -c
htop
nload
iftop
systemctl list-units --type=service
systemctl list-units --type=target
systemctl list-units --type=socket
systemctl list-units --type=mount
systemctl list-units --type=device
systemctl list-units --type=bus
systemctl list-units --type=timer
systemctl list-units --type=swap
systemctl list-unit-files --type=service
systemctl list-unit-files --type=target
systemctl list-unit-files --type=socket
systemctl list-unit-files --type=mount
systemctl list-unit-files --type=device
systemctl list-unit-files --type=bus
[200~lsb_release -r~
lsb_release -r
sudo pacman -Syyu
reboot
sudo pacman -Syyu
export HISTFILESIZE
ls
history -c
history -
history
history -C
history
BONUS -
